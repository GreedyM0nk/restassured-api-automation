<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="5" ignored="27" total="50" passed="18">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="7041" started-at="2021-03-20T19:12:23Z" finished-at="2021-03-20T19:12:30Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="7041" started-at="2021-03-20T19:12:23Z" finished-at="2021-03-20T19:12:30Z">
      <class name="com.automation.tests.HeadRequest">
        <test-method status="PASS" signature="createResponseSpecification()[pri:0, instance:com.automation.tests.HeadRequest@291b4bf5]" name="createResponseSpecification" is-config="true" duration-ms="0" started-at="2021-03-20T19:12:28Z" finished-at="2021-03-20T19:12:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createResponseSpecification -->
        <test-method status="PASS" signature="headRequestToValidateStatusCode()[pri:0, instance:com.automation.tests.HeadRequest@291b4bf5]" name="headRequestToValidateStatusCode" duration-ms="32" started-at="2021-03-20T19:12:28Z" description="Validate the status code for HEAD request" finished-at="2021-03-20T19:12:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- headRequestToValidateStatusCode -->
        <test-method status="PASS" signature="createRequestSpecification()[pri:0, instance:com.automation.tests.HeadRequest@291b4bf5]" name="createRequestSpecification" is-config="true" duration-ms="0" started-at="2021-03-20T19:12:28Z" finished-at="2021-03-20T19:12:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createRequestSpecification -->
      </class> <!-- com.automation.tests.HeadRequest -->
      <class name="com.automation.tests.GetRequestWithQueryParams">
        <test-method status="PASS" signature="createRequestSpecification()[pri:0, instance:com.automation.tests.GetRequestWithQueryParams@63070bab]" name="createRequestSpecification" is-config="true" duration-ms="0" started-at="2021-03-20T19:12:27Z" finished-at="2021-03-20T19:12:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createRequestSpecification -->
        <test-method status="PASS" signature="getParticularJobDetailsUsingQueryParams()[pri:0, instance:com.automation.tests.GetRequestWithQueryParams@63070bab]" name="getParticularJobDetailsUsingQueryParams" duration-ms="50" started-at="2021-03-20T19:12:27Z" description="Validate the status code for GET request using query params" finished-at="2021-03-20T19:12:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getParticularJobDetailsUsingQueryParams -->
        <test-method status="PASS" signature="createResponseSpecification()[pri:0, instance:com.automation.tests.GetRequestWithQueryParams@63070bab]" name="createResponseSpecification" is-config="true" duration-ms="0" started-at="2021-03-20T19:12:27Z" finished-at="2021-03-20T19:12:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createResponseSpecification -->
      </class> <!-- com.automation.tests.GetRequestWithQueryParams -->
      <class name="com.automation.tests.ResponseAwareMatcher">
        <test-method status="PASS" signature="createResponseSpecification()[pri:0, instance:com.automation.tests.ResponseAwareMatcher@6db9f5a4]" name="createResponseSpecification" is-config="true" duration-ms="1" started-at="2021-03-20T19:12:30Z" finished-at="2021-03-20T19:12:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createResponseSpecification -->
        <test-method status="PASS" signature="createRequestSpecification()[pri:0, instance:com.automation.tests.ResponseAwareMatcher@6db9f5a4]" name="createRequestSpecification" is-config="true" duration-ms="0" started-at="2021-03-20T19:12:30Z" finished-at="2021-03-20T19:12:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createRequestSpecification -->
        <test-method status="PASS" signature="responseAwareMatcherTest()[pri:0, instance:com.automation.tests.ResponseAwareMatcher@6db9f5a4]" name="responseAwareMatcherTest" duration-ms="62" started-at="2021-03-20T19:12:30Z" description="Response Aware Matcher Validation" finished-at="2021-03-20T19:12:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- responseAwareMatcherTest -->
      </class> <!-- com.automation.tests.ResponseAwareMatcher -->
      <class name="com.automation.tests.XmlNamespaceValidation">
        <test-method status="PASS" signature="createRequestSpecification()[pri:0, instance:com.automation.tests.XmlNamespaceValidation@10d68fcd]" name="createRequestSpecification" is-config="true" duration-ms="0" started-at="2021-03-20T19:12:29Z" finished-at="2021-03-20T19:12:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createRequestSpecification -->
        <test-method status="PASS" signature="validateXmlNamespace()[pri:0, instance:com.automation.tests.XmlNamespaceValidation@10d68fcd]" name="validateXmlNamespace" duration-ms="80" started-at="2021-03-20T19:12:29Z" finished-at="2021-03-20T19:12:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateXmlNamespace -->
        <test-method status="PASS" signature="createResponseSpecification()[pri:0, instance:com.automation.tests.XmlNamespaceValidation@10d68fcd]" name="createResponseSpecification" is-config="true" duration-ms="0" started-at="2021-03-20T19:12:29Z" finished-at="2021-03-20T19:12:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createResponseSpecification -->
      </class> <!-- com.automation.tests.XmlNamespaceValidation -->
      <class name="com.automation.tests.PatchRequestToUpdateParticularJobId">
        <test-method status="PASS" signature="createRequestSpecification()[pri:0, instance:com.automation.tests.PatchRequestToUpdateParticularJobId@68e5eea7]" name="createRequestSpecification" is-config="true" duration-ms="16" started-at="2021-03-20T19:12:27Z" finished-at="2021-03-20T19:12:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createRequestSpecification -->
        <test-method status="PASS" signature="createResponseSpecification()[pri:0, instance:com.automation.tests.PatchRequestToUpdateParticularJobId@68e5eea7]" name="createResponseSpecification" is-config="true" duration-ms="0" started-at="2021-03-20T19:12:27Z" finished-at="2021-03-20T19:12:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createResponseSpecification -->
        <test-method status="FAIL" signature="patchRequestWithQueryParam()[pri:0, instance:com.automation.tests.PatchRequestToUpdateParticularJobId@68e5eea7]" name="patchRequestWithQueryParam" duration-ms="93" started-at="2021-03-20T19:12:27Z" description="Validate the status code for PATCH request using Query param" finished-at="2021-03-20T19:12:28Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [404]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [404]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at org.testng.Assert.assertEquals(Assert.java:662)
at com.automation.tests.PatchRequestToUpdateParticularJobId.patchRequestWithQueryParam(PatchRequestToUpdateParticularJobId.java:29)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- patchRequestWithQueryParam -->
      </class> <!-- com.automation.tests.PatchRequestToUpdateParticularJobId -->
      <class name="com.automation.tests.SpecifyingRequestPort">
        <test-method status="PASS" signature="createRequestSpecification()[pri:0, instance:com.automation.tests.SpecifyingRequestPort@117e949d]" name="createRequestSpecification" is-config="true" duration-ms="0" started-at="2021-03-20T19:12:30Z" finished-at="2021-03-20T19:12:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createRequestSpecification -->
        <test-method status="PASS" signature="createResponseSpecification()[pri:0, instance:com.automation.tests.SpecifyingRequestPort@117e949d]" name="createResponseSpecification" is-config="true" duration-ms="1" started-at="2021-03-20T19:12:30Z" finished-at="2021-03-20T19:12:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createResponseSpecification -->
        <test-method status="PASS" signature="defaultConfigurationSetup()[pri:0, instance:com.automation.tests.SpecifyingRequestPort@117e949d]" name="defaultConfigurationSetup" is-config="true" duration-ms="0" started-at="2021-03-20T19:12:30Z" finished-at="2021-03-20T19:12:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- defaultConfigurationSetup -->
        <test-method status="PASS" signature="getRequestUsingMockService()[pri:0, instance:com.automation.tests.SpecifyingRequestPort@117e949d]" name="getRequestUsingMockService" duration-ms="23" started-at="2021-03-20T19:12:30Z" finished-at="2021-03-20T19:12:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestUsingMockService -->
        <test-method status="PASS" signature="specifyPort()[pri:0, instance:com.automation.tests.SpecifyingRequestPort@117e949d]" name="specifyPort" duration-ms="23" started-at="2021-03-20T19:12:30Z" finished-at="2021-03-20T19:12:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- specifyPort -->
        <test-method status="PASS" signature="validateResponseTime()[pri:0, instance:com.automation.tests.SpecifyingRequestPort@117e949d]" name="validateResponseTime" duration-ms="35" started-at="2021-03-20T19:12:30Z" finished-at="2021-03-20T19:12:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateResponseTime -->
      </class> <!-- com.automation.tests.SpecifyingRequestPort -->
      <class name="com.automation.tests.PutRequestToUpdateJobDetails">
        <test-method status="PASS" signature="createRequestSpecification()[pri:0, instance:com.automation.tests.PutRequestToUpdateJobDetails@6f45df59]" name="createRequestSpecification" is-config="true" duration-ms="0" started-at="2021-03-20T19:12:27Z" finished-at="2021-03-20T19:12:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createRequestSpecification -->
        <test-method status="PASS" signature="createResponseSpecification()[pri:0, instance:com.automation.tests.PutRequestToUpdateJobDetails@6f45df59]" name="createResponseSpecification" is-config="true" duration-ms="0" started-at="2021-03-20T19:12:27Z" finished-at="2021-03-20T19:12:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createResponseSpecification -->
        <test-method status="FAIL" signature="updateUsingPutRequest()[pri:0, instance:com.automation.tests.PutRequestToUpdateJobDetails@6f45df59]" name="updateUsingPutRequest" duration-ms="187" started-at="2021-03-20T19:12:27Z" description="Validate the status code for PUT request" finished-at="2021-03-20T19:12:27Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [404]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [404]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at org.testng.Assert.assertEquals(Assert.java:662)
at com.automation.tests.PutRequestToUpdateJobDetails.updateUsingPutRequest(PutRequestToUpdateJobDetails.java:28)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updateUsingPutRequest -->
      </class> <!-- com.automation.tests.PutRequestToUpdateJobDetails -->
      <class name="com.automation.tests.DeleteParticularJobId">
        <test-method status="PASS" signature="createRequestSpecification()[pri:0, instance:com.automation.tests.DeleteParticularJobId@38e79ae3]" name="createRequestSpecification" is-config="true" duration-ms="16" started-at="2021-03-20T19:12:27Z" finished-at="2021-03-20T19:12:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createRequestSpecification -->
        <test-method status="PASS" signature="createResponseSpecification()[pri:0, instance:com.automation.tests.DeleteParticularJobId@38e79ae3]" name="createResponseSpecification" is-config="true" duration-ms="0" started-at="2021-03-20T19:12:27Z" finished-at="2021-03-20T19:12:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createResponseSpecification -->
        <test-method status="FAIL" signature="deleteRequestWithPathParam()[pri:0, instance:com.automation.tests.DeleteParticularJobId@38e79ae3]" name="deleteRequestWithPathParam" duration-ms="62" started-at="2021-03-20T19:12:27Z" description="Validate the DELETE request with Path param" finished-at="2021-03-20T19:12:27Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [404]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [404]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at org.testng.Assert.assertEquals(Assert.java:662)
at com.automation.tests.DeleteParticularJobId.deleteRequestWithPathParam(DeleteParticularJobId.java:47)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteRequestWithPathParam -->
        <test-method status="FAIL" signature="deleteSpecificRecordUsingDeleteRequest()[pri:0, instance:com.automation.tests.DeleteParticularJobId@38e79ae3]" name="deleteSpecificRecordUsingDeleteRequest" duration-ms="47" started-at="2021-03-20T19:12:27Z" description="Validate the status code for DELETE request" finished-at="2021-03-20T19:12:27Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [404]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [404]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:652)
at org.testng.Assert.assertEquals(Assert.java:662)
at com.automation.tests.DeleteParticularJobId.deleteSpecificRecordUsingDeleteRequest(DeleteParticularJobId.java:27)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteSpecificRecordUsingDeleteRequest -->
      </class> <!-- com.automation.tests.DeleteParticularJobId -->
      <class name="com.automation.tests.GetRequestWithBasicAuth">
        <test-method status="PASS" signature="createRequestSpecification()[pri:0, instance:com.automation.tests.GetRequestWithBasicAuth@2d2ffcb7]" name="createRequestSpecification" is-config="true" duration-ms="0" started-at="2021-03-20T19:12:28Z" finished-at="2021-03-20T19:12:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createRequestSpecification -->
        <test-method status="PASS" signature="secureGetRequestUsingChallengedBasicAuth()[pri:0, instance:com.automation.tests.GetRequestWithBasicAuth@2d2ffcb7]" name="secureGetRequestUsingChallengedBasicAuth" duration-ms="182" started-at="2021-03-20T19:12:28Z" description="Validate the status code for secure GET request with Basic Authentication" finished-at="2021-03-20T19:12:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- secureGetRequestUsingChallengedBasicAuth -->
        <test-method status="PASS" signature="createResponseSpecification()[pri:0, instance:com.automation.tests.GetRequestWithBasicAuth@2d2ffcb7]" name="createResponseSpecification" is-config="true" duration-ms="0" started-at="2021-03-20T19:12:28Z" finished-at="2021-03-20T19:12:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createResponseSpecification -->
      </class> <!-- com.automation.tests.GetRequestWithBasicAuth -->
      <class name="com.automation.tests.XmlSchemaValidation">
        <test-method status="PASS" signature="createRequestSpecification()[pri:0, instance:com.automation.tests.XmlSchemaValidation@424e1977]" name="createRequestSpecification" is-config="true" duration-ms="0" started-at="2021-03-20T19:12:29Z" finished-at="2021-03-20T19:12:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createRequestSpecification -->
        <test-method status="PASS" signature="createResponseSpecification()[pri:0, instance:com.automation.tests.XmlSchemaValidation@424e1977]" name="createResponseSpecification" is-config="true" duration-ms="0" started-at="2021-03-20T19:12:29Z" finished-at="2021-03-20T19:12:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createResponseSpecification -->
        <test-method status="FAIL" signature="validateXmlDtdSchema()[pri:0, instance:com.automation.tests.XmlSchemaValidation@424e1977]" name="validateXmlDtdSchema" duration-ms="156" started-at="2021-03-20T19:12:29Z" description="Validating the XML DTD Schema" finished-at="2021-03-20T19:12:29Z">
          <exception class="org.xml.sax.SAXParseException">
            <message>
              <![CDATA[Attribute "xmlns:perctg" must be declared for element type "student".]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.xml.sax.SAXParseException; lineNumber: 2; columnNumber: 54; Attribute "xmlns:perctg" must be declared for element type "student".
at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(Unknown Source)
at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(Unknown Source)
at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(Unknown Source)
at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(Unknown Source)
at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(Unknown Source)
at com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator.addDTDDefaultAttrsAndValidate(Unknown Source)
at com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator.handleStartElement(Unknown Source)
at com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator.startElement(Unknown Source)
at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanStartElement(Unknown Source)
at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$ContentDriver.scanRootElementHook(Unknown Source)
at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(Unknown Source)
at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(Unknown Source)
at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(Unknown Source)
at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)
at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(Unknown Source)
at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(Unknown Source)
at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(Unknown Source)
at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(Unknown Source)
at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(Unknown Source)
at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl$parse$0.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:125)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)
at io.restassured.internal.matcher.xml.XmlDtdMatcher.matches(XmlDtdMatcher.groovy:87)
at org.hamcrest.Matcher$matches$0.call(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:47)
at org.hamcrest.Matcher$matches.call(Unknown Source)
at io.restassured.assertion.BodyMatcher.validate(BodyMatcher.groovy:76)
at io.restassured.assertion.BodyMatcher$validate$0.call(Unknown Source)
at io.restassured.assertion.BodyMatcherGroup$_validate_closure2.doCall(BodyMatcherGroup.groovy:47)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:263)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1029)
at groovy.lang.Closure.call(Closure.java:412)
at groovy.lang.Closure.call(Closure.java:428)
at org.codehaus.groovy.runtime.DefaultGroovyMethods.collect(DefaultGroovyMethods.java:3564)
at org.codehaus.groovy.runtime.DefaultGroovyMethods.collect(DefaultGroovyMethods.java:3549)
at org.codehaus.groovy.runtime.DefaultGroovyMethods.collect(DefaultGroovyMethods.java:3649)
at org.codehaus.groovy.runtime.dgm$101.invoke(Unknown Source)
at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoMetaMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:247)
at org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:56)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:139)
at io.restassured.assertion.BodyMatcherGroup.validate(BodyMatcherGroup.groovy:47)
at io.restassured.assertion.BodyMatcherGroup$validate$3.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:480)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at sun.reflect.GeneratedMethodAccessor78.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:98)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:238)
at io.restassured.internal.ValidatableResponseImpl.super$2$body(ValidatableResponseImpl.groovy)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1262)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy:293)
at io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy)
at com.automation.tests.XmlSchemaValidation.validateXmlDtdSchema(XmlSchemaValidation.java:24)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.xml.sax.SAXParseException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateXmlDtdSchema -->
        <test-method status="PASS" signature="validateXmlXsdSchema()[pri:0, instance:com.automation.tests.XmlSchemaValidation@424e1977]" name="validateXmlXsdSchema" duration-ms="125" started-at="2021-03-20T19:12:29Z" description="Validating the XML XSD Schema" finished-at="2021-03-20T19:12:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateXmlXsdSchema -->
      </class> <!-- com.automation.tests.XmlSchemaValidation -->
      <class name="com.automation.tests.JsonSchemaValidation">
        <test-method status="PASS" signature="createResponseSpecification()[pri:0, instance:com.automation.tests.JsonSchemaValidation@31f9b85e]" name="createResponseSpecification" is-config="true" duration-ms="0" started-at="2021-03-20T19:12:29Z" finished-at="2021-03-20T19:12:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createResponseSpecification -->
        <test-method status="PASS" signature="createRequestSpecification()[pri:0, instance:com.automation.tests.JsonSchemaValidation@31f9b85e]" name="createRequestSpecification" is-config="true" duration-ms="0" started-at="2021-03-20T19:12:29Z" finished-at="2021-03-20T19:12:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createRequestSpecification -->
        <test-method status="PASS" signature="validateJsonSchema()[pri:0, instance:com.automation.tests.JsonSchemaValidation@31f9b85e]" name="validateJsonSchema" duration-ms="533" started-at="2021-03-20T19:12:29Z" description="Validating the JSON Schema" finished-at="2021-03-20T19:12:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateJsonSchema -->
      </class> <!-- com.automation.tests.JsonSchemaValidation -->
      <class name="com.automation.tests.GetRequestWithDigestAuth">
        <test-method status="PASS" signature="createResponseSpecification()[pri:0, instance:com.automation.tests.GetRequestWithDigestAuth@762ef0ea]" name="createResponseSpecification" is-config="true" duration-ms="1" started-at="2021-03-20T19:12:28Z" finished-at="2021-03-20T19:12:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createResponseSpecification -->
        <test-method status="PASS" signature="createRequestSpecification()[pri:0, instance:com.automation.tests.GetRequestWithDigestAuth@762ef0ea]" name="createRequestSpecification" is-config="true" duration-ms="0" started-at="2021-03-20T19:12:28Z" finished-at="2021-03-20T19:12:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createRequestSpecification -->
        <test-method status="PASS" signature="getRequestUsingDigestAuth()[pri:0, instance:com.automation.tests.GetRequestWithDigestAuth@762ef0ea]" name="getRequestUsingDigestAuth" duration-ms="836" started-at="2021-03-20T19:12:28Z" description="Validate the status code for secure GET request with Digest Authentication" finished-at="2021-03-20T19:12:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestUsingDigestAuth -->
      </class> <!-- com.automation.tests.GetRequestWithDigestAuth -->
      <class name="com.automation.tests.GetJobDetails">
        <test-method status="PASS" signature="setUpSuite()[pri:0, instance:com.automation.tests.GetJobDetails@58ea606c]" name="setUpSuite" is-config="true" duration-ms="326" started-at="2021-03-20T19:12:22Z" finished-at="2021-03-20T19:12:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpSuite -->
        <test-method status="PASS" signature="createRequestSpecification()[pri:0, instance:com.automation.tests.GetJobDetails@58ea606c]" name="createRequestSpecification" is-config="true" duration-ms="562" started-at="2021-03-20T19:12:23Z" finished-at="2021-03-20T19:12:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createRequestSpecification -->
        <test-method status="PASS" signature="createResponseSpecification()[pri:0, instance:com.automation.tests.GetJobDetails@58ea606c]" name="createResponseSpecification" is-config="true" duration-ms="78" started-at="2021-03-20T19:12:23Z" finished-at="2021-03-20T19:12:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createResponseSpecification -->
        <test-method status="PASS" signature="getRequestToValidateJsonResponseBody()[pri:0, instance:com.automation.tests.GetJobDetails@58ea606c]" name="getRequestToValidateJsonResponseBody" duration-ms="3094" started-at="2021-03-20T19:12:23Z" description="Validate the JSON response body for GET request" finished-at="2021-03-20T19:12:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestToValidateJsonResponseBody -->
        <test-method status="PASS" signature="getRequestToValidateJsonResponseHeader()[pri:0, instance:com.automation.tests.GetJobDetails@58ea606c]" name="getRequestToValidateJsonResponseHeader" duration-ms="32" started-at="2021-03-20T19:12:26Z" description="Validate the JSON response header for GET request" finished-at="2021-03-20T19:12:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestToValidateJsonResponseHeader -->
        <test-method status="PASS" signature="getRequestToValidateResponseBodyUsingJsonPath()[pri:0, instance:com.automation.tests.GetJobDetails@58ea606c]" name="getRequestToValidateResponseBodyUsingJsonPath" duration-ms="103" started-at="2021-03-20T19:12:26Z" description="Validate the JSON response body using Json Path for GET request" finished-at="2021-03-20T19:12:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestToValidateResponseBodyUsingJsonPath -->
        <test-method status="PASS" signature="getRequestToValidateStatusCode()[pri:0, instance:com.automation.tests.GetJobDetails@58ea606c]" name="getRequestToValidateStatusCode" duration-ms="37" started-at="2021-03-20T19:12:27Z" description="Validate the status code for GET request" finished-at="2021-03-20T19:12:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestToValidateStatusCode -->
        <test-method status="PASS" signature="getRequestToValidateStatusLine()[pri:0, instance:com.automation.tests.GetJobDetails@58ea606c]" name="getRequestToValidateStatusLine" duration-ms="50" started-at="2021-03-20T19:12:27Z" description="Validate the status line for GET request" finished-at="2021-03-20T19:12:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestToValidateStatusLine -->
        <test-method status="PASS" signature="getRequestToValidateXmlResponseBody()[pri:0, instance:com.automation.tests.GetJobDetails@58ea606c]" name="getRequestToValidateXmlResponseBody" duration-ms="381" started-at="2021-03-20T19:12:27Z" description="Validate the XML response body for GET request" finished-at="2021-03-20T19:12:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestToValidateXmlResponseBody -->
        <test-method status="PASS" signature="getRequestToValidateXmlResponseHeader()[pri:0, instance:com.automation.tests.GetJobDetails@58ea606c]" name="getRequestToValidateXmlResponseHeader" duration-ms="32" started-at="2021-03-20T19:12:27Z" description="Validate the XML response header for GET request" finished-at="2021-03-20T19:12:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestToValidateXmlResponseHeader -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.automation.tests.GetJobDetails@58ea606c]" name="tearDown" is-config="true" duration-ms="621" started-at="2021-03-20T19:12:30Z" finished-at="2021-03-20T19:12:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.automation.tests.GetJobDetails -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
